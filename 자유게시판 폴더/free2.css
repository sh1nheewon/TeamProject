* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
html {
  height: 100vh;
}
body {
  height: 100%;
}
article {
  border: 1px solid;
}
textarea {
  display: block;
  width: 80%;
  height: 80%;
  margin: 30px;
}

ul.MENU {
  padding: 10px;
  background-color: #00dad6;
  display: flex;
  justify-content: end;
  align-items: center;

  border-bottom-left-radius: 10px;
  border-bottom-right-radius: 10px;
}

li {
  list-style: none;
  margin: 0 10px;
  font-weight: bold;
}
a {
  text-decoration: none;
  color: black;
}

h2.free {
  justify-content: center;
  text-align: center;
  margin: auto;
}
section {
  width: 100%;
}
main {
  text-align: center;
  justify-content: center;
}

.write {
  width: 1000px;
  margin: 0 auto;
  border-top: 3px solid gray;
  border-bottom: 3px solid gray;
  text-align: center;
  justify-content: center;
}

.write input {
  width: 800px;
  padding: 10px;
  margin: 15px;
}
.write .text {
  margin: 15px auto;
  height: 500px;
  white-space: pre-line;
  word-break: break-all;
}
.write .button {
  padding: 0 200px;
  margin: 15px auto;
}
.write .btn {
  border: 1px solid #00dad6;
  background-color: #00dad6;
  margin: 5px;
  padding: 5px;
  text-decoration: none;
  color: black;
  border-radius: 20%;
}
.write .btn:hover {
  color: #ffdf6a;
}
.write p {
  text-align: center;
}
ul.MENU li {
  margin: 0 10px;
  font-weight: bold;
  transition: 0.7s;
}
ul.MENU li a {
  list-style: none;
  color: black;
  transition: 0.7s;
  text-decoration: none;
}
a.menu1 li {
  text-decoration: none;
}
ul.MENU li a:hover {
  cursor: pointer;
  /* background-color: rgb(255, 205, 113); */
  color: white;
}
ul.MENU li {
  list-style: none;
  color: black;
  transition: 0.7s;
  text-decoration: none;
}
ul.MENU li:hover {
  cursor: pointer;
  /* background-color: rgb(255, 205, 113); */
  color: white;
}

textarea {
  resize: none;
}

div.free {
  width: 80%;
  display: flex;
  margin: 15px auto;
  height: 50px;
}

div.user {
  flex: 1;
  display: flex;

  input {
    margin-left: 0;
    flex: 1;
    display: inline-block;
    width: 90%;
  }
}

div.freebutton {
  flex: 1;

  display: flex;
  -ms-flex-item-align: end;

  input {
    width: 50%;
    flex: 1;
    display: inline-block;
    border-radius: 20px;
    margin-right: 0;
  }

  button {
    width: 50%;
    flex: 1;
    display: inline-block;
    border-radius: 20px;
    margin-right: 0;
  }
}

input[type="file"] {
  width: 100%;
  height: fit-content;
  box-sizing: border-box;
  margin: 5px;
  color: transparent; /* 파일 이름 텍스트 색상 제거 */
}

textarea.imgtext {
  display: block;
  width: 80%;
  height: 400px;
  margin: 30px;
  resize: none;
  margin: 15px auto;
  white-space: pre-line;
  word-break: break-all;
}

div.img_box {
  max-width: calc(95% - 12px - 10px);
  position: relative;

  margin: auto;
  padding: 10px;
  cursor: pointer;

  display: flex;
  justify-content: center;
  align-items: center;

  img.img_add {
    transition: 0.7s;
    &:hover {
      opacity: 0.5;
      cursor: pointer;
    }
  }

  /*
  목표 : div.img_box 를 클릭하면 focus 가 지정되고, focus 가 지정된 것을
  보여주고 싶다
  1. div box 는 focus 를 지정할수 없다
    focus를 지정할수 있는 tag input, button 등 몇몇으로 한정된다.
  2. div box 내부에 input tag 를 하나 추가하고
    opecity 를 0 으로 하여 투명하게 한다.
    position 을 absolute 로 설정하여 위치도 투명하게 : 다른 tag 를 간섭하지 않도록
  3. JS 를 이용하여 div box 를 클릭하면 input tag 에 focus() 를 실행한다
  4. div:focus-within 속성이 적용된다
    div box 가 포함하는 input tag 등에 focus가 설정되면
    자신이 focus를 받은것 처럼 반응하게 한다
  5. 22년 이후의 최신 브라우저만 적용된다.
  */

  input#img_focus {
    opacity: 0;
    position: absolute;
    bottom: 0;
    right: 0;
  }
}
